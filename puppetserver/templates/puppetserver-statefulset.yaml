apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "puppetserver.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "puppetserver.name" . }}
    helm.sh/chart: {{ include "puppetserver.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.puppetdb.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "puppetserver.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "puppetserver.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
      - name: {{ . }}
      {{- end}}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: PUPPERWARE_ANALYTICS_ENABLED
          value: {{ .Values.pupperwareAnalyticsEnabled | quote }}
        - name: PUPPETSERVER_JAVA_ARGS
          value: {{ join " " .Values.puppetserverJavaArgs | quote }}
        - name: PUPPET_HEALTHCHECK_ENVIRONMENT
          value: {{ .Values.puppetHealthcheckEnvironment | quote }}
        - name: PUPPETSERVER_MAX_ACTIVE_INSTANCES
          value: {{ .Values.puppetserverMaxActiveInstances | quote }}
        - name: PUPPETSERVER_MAX_REQUESTS_PER_INSTANCE
          value: {{ .Values.puppetserverMaxRequestsPerInstance | quote }}
        - name: CA_ENABLED
          value: {{ .Values.caEnabled | quote }}
              {{- if not .Values.caEnabled }}
        - name: CA_HOSTNAME
          value: {{ .Values.caHostname | quote }}
              {{- end }}
        - name: PUPPETSERVER_HOSTNAME
          value: {{ include "puppetserver.hostname" . }}
        - name: AUTOSIGN
          value: {{ .Values.autosign | quote }}
        - name: DNS_ALT_NAMES
          value: {{ include "puppetserver.dnsAltNames" . }}
        - name: PUPPETDB_SERVER_URLS
          value: {{ include "puppetserver.puppetdbServerUrls" . }}
        ports:
        - name: https
          containerPort: 8140
          protocol: TCP
        livenessProbe:
          exec: {command: ["/healthcheck.sh"]}
          timeoutSeconds: 5
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 5
        readinessProbe:
          exec: {command: ["/healthcheck.sh"]}
          timeoutSeconds: 5
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 5
        volumeMounts:
        - name: data
          subPath: code
          mountPath: /etc/puppetlabs/code
        - name: data
          subPath: puppet
          mountPath: /etc/puppetlabs/puppet
        - name: data
          subPath: serverdata
          mountPath: /opt/puppetlabs/server/data/puppetserver
        {{- if .Values.r10kYaml }}
        - name: puppetserver-configmap
          subPath: r10k.yaml
          mountPath: /etc/puppetlabs/r10k/r10k.yaml
        {{- end }}
        {{- if .Values.ssh }}
        - name: puppetserver-ssh
          mountPath: /root/.ssh
        {{- end}}
        resources:
{{- toYaml .Values.resources | nindent 10 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: puppetserver-configmap
          configMap:
            name: {{ template "puppetserver.fullname" . }}
        {{- if .Values.ssh }}
        - name: puppetserver-ssh
          secret:
            secretName: {{ include "puppetserver.fullname" . }}-ssh
            # octal 0644 = 420, 0600 = 384
            items:
              - key: config
                path: config
                mode: 420
              - key: id_rsa
                path: id_rsa
                mode: 384
              - key: id_rsa.pub
                path: id_rsa.pub
                mode: 420
              - key: known_hosts
                path: known_hosts
                mode: 384
        {{- end}}
{{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
      - name: data
        persistentVolumeClaim:
{{- with .Values.persistence.existingClaim }}
          claimName: {{ tpl . $ }}
{{- end }}
{{- else if not .Values.persistence.enabled }}
      - name: data
        emptyDir: {}
{{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
      {{- with .Values.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
{{- end }}
