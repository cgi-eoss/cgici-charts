# Default values for nexus.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

image:
  repository: cgici/nexus3-cgici
  tag: 3.13.0
  pullPolicy: IfNotPresent

securityContext:
  runAsUser: 200
  fsGroup: 200

service:
  name: nexus
  type: ClusterIP
  externalPort: 8081
  internalPort: 8081
  healthProbes: true
  healthProbesTimeout: 60
  additionalPorts: []
  #  additionalPorts:
  #    - name: repo
  #      internalPort: 12345
  #      externalPort: 12345


ingress:
  enabled: false
  # Used to create an Ingress record.

  # Ingress hostnames
  # One of hosts or rules be provided if Ingress is enabled
  #hosts:
  #  - nexus.example.com

  # Additional ingress rules; note that ingress can only manage 80/443 so
  # aliasing to different Nexus backend ports must be done via hostname:443
  # NOTE: Remember to define the backend port in "service.additionalPorts"
  #
  #additionalRules:
  #  - host: other.nexus.example.com
  #    paths:
  #      - servicePort: 12345

  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  
  #tls:
    # Secrets must be manually created in the namespace.
    # - secretName: nexus-tls
    #   hosts:
    #     - nexus.example.com
    #     - other.nexus.example.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

persistence:
  enabled: true
  annotations: {}
  accessMode: ReadWriteOnce
  size: 8Gi
  volumes: []
  #  - name: nothing
  #    emptyDir: {}
  mounts: []
  #  - mountPath: /var/nothing
  #    name: nothing
  #    readOnly: true
