# Default values for taiga.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

taigaBackImage:
  repository: cgici/taiga-back
  tag: 4.1.1
  pullPolicy: IfNotPresent

taigaFrontImage:
  repository: cgici/taiga-front
  tag: 4.1.1
  pullPolicy: IfNotPresent

taigaEventsImage:
  repository: cgici/taiga-events
  tag: 4.1.1
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

taigaBackServiceType: ClusterIP
taigaBackServicePort: 8001
taigaFrontServiceType: ClusterIP
taigaFrontServicePort: 80
taigaEventsServiceType: ClusterIP
taigaEventsServicePort: 8888

ingress:
  enabled: false
  annotations:
    # Websocket and large file upload support
    nginx.ingress.kubernetes.io/proxy-send-timeout: '7d'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '7d'
    nginx.ingress.kubernetes.io/proxy-body-size: '50M'
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - taiga.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - taiga.local

securityContext:
  # Default ownership matching the service user inside the cgici/taiga-back and cgici/taiga-events images
  runAsUser: 1000
  fsGroup: 1000

# TAIGA_HOSTNAME environment variable, used by taiga-back to construct URLs - should likely align with an ingress host
taigaHostname: taiga.local
# TAIGA_PROTOCOL environment variable, used by taiga-back to construct URLs - should be https if ingress TLS is enabled
taigaProtocol: http
# !! MANDATORY !! - TAIGA_SECRET_KEY environment variable, used by taiga-back and taiga-events to secure records
# taigaSecretKey:

taigaEventsEnabled: false
#taigaRabbitUrl:
#taigaRedisUrl:

taigaEmailEnabled: false
taigaEmailFrom: no-reply@taiga.local
#taigaEmailHost: smtp.taiga.local
#taigaEmailPort: 22
#taigaEmailUser:
#taigaEmailPass:
taigaEmailTls: false

frontResources:
  requests:
    memory: 64Mi
    cpu: 100m
backResources:
  requests:
    memory: 256Mi
    cpu: 100m
eventsResources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
#  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:
  annotations: {}
  accessMode: ReadWriteOnce
  size: 10Gi

postgresql:
  postgresqlUsername: "taiga"
  postgresqlPassword: "taigadbpass"
  postgresqlDatabase: "taiga"
  # Specify the TCP port that PostgreSQL should use
  service:
    port: 5432
  resources:
    requests:
      memory: 128Mi
      cpu: 250m

# Some defaults from the values-production.yaml config
rabbitmq:
  rabbitmq:
    username: "taiga"
    password: "taigaeventspass"
  service:
    port: 5672
  requests:
    memory: 128Mi
    cpu: 100m

# Small-scale single-node redis for celery task management
redis:
  cluster:
    enabled: false
  master:
    service:
      port: 6379
    persistence:
      enabled: false
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
