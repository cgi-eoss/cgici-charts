# Default values for gradle-cache.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: gradle/build-cache-node
  tag: "7.0"
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 5071

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: gradle-cache.local
      paths: []

  tls: []
  #  - secretName: gradle-cache-tls
  #    hosts:
  #      - gradle-cache.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Parameters to be merged into the config file as described https://docs.gradle.com/build-cache-node/#configuration
#
# Credentials for config.cache.credentials.users and config.uiAccess can be generated with:
# `docker run --interactive --tty gradle/build-cache-node:7.0 --hash-password`
config:
  version: 2
  # Gradle Enterprise registration
  #registration: {}
  cache:
    # Default is 10GB but we should leave 100 MB of the PVC for metadata
    targetSize: 9900
    credentials:
      anonymousLevel: "READWRITE"
      # anonymous access is disabled if any users are defined
      users: []
  #uiAccess: {}

persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:
  annotations: {}
  accessMode: ReadWriteOnce
  size: 10Gi
